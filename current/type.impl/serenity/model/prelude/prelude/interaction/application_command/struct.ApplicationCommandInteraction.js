(function() {var type_impls = {
"serenity":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApplicationCommandInteraction\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#80-327\">source</a><a href=\"#impl-ApplicationCommandInteraction\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html\" title=\"struct serenity::model::prelude::prelude::interaction::application_command::ApplicationCommandInteraction\">ApplicationCommandInteraction</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_interaction_response\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#86-88\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.get_interaction_response\" class=\"fn\">get_interaction_response</a>(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"struct\" href=\"serenity/model/channel/struct.Message.html\" title=\"struct serenity::model::channel::Message\">Message</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the interaction response.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if there is no interaction response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_interaction_response\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#100-112\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.create_interaction_response\" class=\"fn\">create_interaction_response</a>&lt;'a, F&gt;(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;,\n    f: F\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;<span class=\"where fmt-newline\">where\n    for&lt;'b&gt; F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"struct\" href=\"serenity/builder/struct.CreateInteractionResponse.html\" title=\"struct serenity::builder::CreateInteractionResponse\">CreateInteractionResponse</a>&lt;'a&gt;) -&gt; &amp;'b mut <a class=\"struct\" href=\"serenity/builder/struct.CreateInteractionResponse.html\" title=\"struct serenity::builder::CreateInteractionResponse\">CreateInteractionResponse</a>&lt;'a&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a response to the interaction received.</p>\n<p><strong>Note</strong>: Message contents must be under 2000 unicode code points.</p>\n<h5 id=\"errors-1\"><a href=\"#errors-1\">Errors</a></h5>\n<p>Returns an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Model\" title=\"variant serenity::prelude::SerenityError::Model\"><code>Error::Model</code></a> if the message content is too long.\nMay also return an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error,\nor an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Json\" title=\"variant serenity::prelude::SerenityError::Json\"><code>Error::Json</code></a> if there is an error in deserializing the\nAPI response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edit_original_interaction_response\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#152-168\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.edit_original_interaction_response\" class=\"fn\">edit_original_interaction_response</a>&lt;F&gt;(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;,\n    f: F\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"struct\" href=\"serenity/model/channel/struct.Message.html\" title=\"struct serenity::model::channel::Message\">Message</a>&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"struct\" href=\"serenity/builder/struct.EditInteractionResponse.html\" title=\"struct serenity::builder::EditInteractionResponse\">EditInteractionResponse</a>) -&gt; &amp;mut <a class=\"struct\" href=\"serenity/builder/struct.EditInteractionResponse.html\" title=\"struct serenity::builder::EditInteractionResponse\">EditInteractionResponse</a>,</span></h4></section></summary><div class=\"docblock\"><p>Edits the initial interaction response.</p>\n<p><code>application_id</code> will usually be the bot’s <a href=\"serenity/model/prelude/struct.UserId.html\" title=\"struct serenity::model::prelude::UserId\"><code>UserId</code></a>, except in cases of bots being very old.</p>\n<p>Refer to Discord’s docs for Edit Webhook Message for field information.</p>\n<p><strong>Note</strong>: Message contents must be under 2000 unicode code points.</p>\n<h5 id=\"errors-2\"><a href=\"#errors-2\">Errors</a></h5>\n<p>Returns <a href=\"serenity/prelude/enum.SerenityError.html#variant.Model\" title=\"variant serenity::prelude::SerenityError::Model\"><code>Error::Model</code></a> if the edited content is too long.\nMay also return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error,\nor an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Json\" title=\"variant serenity::prelude::SerenityError::Json\"><code>Error::Json</code></a> if there is an error deserializing the response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delete_original_interaction_response\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#178-180\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.delete_original_interaction_response\" class=\"fn\">delete_original_interaction_response</a>(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Deletes the initial interaction response.</p>\n<p>Does not work on ephemeral messages.</p>\n<h5 id=\"errors-3\"><a href=\"#errors-3\">Errors</a></h5>\n<p>May return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error.\nSuch as if the response was already deleted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_followup_message\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#191-204\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.create_followup_message\" class=\"fn\">create_followup_message</a>&lt;'a, F&gt;(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;,\n    f: F\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"struct\" href=\"serenity/model/channel/struct.Message.html\" title=\"struct serenity::model::channel::Message\">Message</a>&gt;<span class=\"where fmt-newline\">where\n    for&lt;'b&gt; F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"struct\" href=\"serenity/builder/struct.CreateInteractionResponseFollowup.html\" title=\"struct serenity::builder::CreateInteractionResponseFollowup\">CreateInteractionResponseFollowup</a>&lt;'a&gt;) -&gt; &amp;'b mut <a class=\"struct\" href=\"serenity/builder/struct.CreateInteractionResponseFollowup.html\" title=\"struct serenity::builder::CreateInteractionResponseFollowup\">CreateInteractionResponseFollowup</a>&lt;'a&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a followup response to the response sent.</p>\n<p><strong>Note</strong>: Message contents must be under 2000 unicode code points.</p>\n<h5 id=\"errors-4\"><a href=\"#errors-4\">Errors</a></h5>\n<p>Will return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Model\" title=\"variant serenity::prelude::SerenityError::Model\"><code>Error::Model</code></a> if the content is too long.\nMay also return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error,\nor a <a href=\"serenity/prelude/enum.SerenityError.html#variant.Json\" title=\"variant serenity::prelude::SerenityError::Json\"><code>Error::Json</code></a> if there is an error in deserializing the response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.edit_followup_message\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#237-269\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.edit_followup_message\" class=\"fn\">edit_followup_message</a>&lt;'a, F, M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"serenity/model/prelude/struct.MessageId.html\" title=\"struct serenity::model::prelude::MessageId\">MessageId</a>&gt;&gt;(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;,\n    message_id: M,\n    f: F\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"struct\" href=\"serenity/model/channel/struct.Message.html\" title=\"struct serenity::model::channel::Message\">Message</a>&gt;<span class=\"where fmt-newline\">where\n    for&lt;'b&gt; F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut <a class=\"struct\" href=\"serenity/builder/struct.CreateInteractionResponseFollowup.html\" title=\"struct serenity::builder::CreateInteractionResponseFollowup\">CreateInteractionResponseFollowup</a>&lt;'a&gt;) -&gt; &amp;'b mut <a class=\"struct\" href=\"serenity/builder/struct.CreateInteractionResponseFollowup.html\" title=\"struct serenity::builder::CreateInteractionResponseFollowup\">CreateInteractionResponseFollowup</a>&lt;'a&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Edits a followup response to the response sent.</p>\n<p><strong>Note</strong>: Message contents must be under 2000 unicode code points.</p>\n<h5 id=\"errors-5\"><a href=\"#errors-5\">Errors</a></h5>\n<p>Will return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Model\" title=\"variant serenity::prelude::SerenityError::Model\"><code>Error::Model</code></a> if the content is too long.\nMay also return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error,\nor a <a href=\"serenity/prelude/enum.SerenityError.html#variant.Json\" title=\"variant serenity::prelude::SerenityError::Json\"><code>Error::Json</code></a> if there is an error in deserializing the response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delete_followup_message\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#277-283\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.delete_followup_message\" class=\"fn\">delete_followup_message</a>&lt;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"serenity/model/prelude/struct.MessageId.html\" title=\"struct serenity::model::prelude::MessageId\">MessageId</a>&gt;&gt;(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;,\n    message_id: M\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Deletes a followup message.</p>\n<h5 id=\"errors-6\"><a href=\"#errors-6\">Errors</a></h5>\n<p>May return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error.\nSuch as if the response was already deleted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_followup_message\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#291-297\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.get_followup_message\" class=\"fn\">get_followup_message</a>&lt;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"serenity/model/prelude/struct.MessageId.html\" title=\"struct serenity::model::prelude::MessageId\">MessageId</a>&gt;&gt;(\n    &amp;self,\n    http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;,\n    message_id: M\n) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"struct\" href=\"serenity/model/channel/struct.Message.html\" title=\"struct serenity::model::channel::Message\">Message</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a followup message.</p>\n<h5 id=\"errors-7\"><a href=\"#errors-7\">Errors</a></h5>\n<p>May return <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error.\nSuch as if the response was deleted.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.defer\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#306-311\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.defer\" class=\"fn\">defer</a>(&amp;self, http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Helper function to defer an interaction</p>\n<h5 id=\"errors-8\"><a href=\"#errors-8\">Errors</a></h5>\n<p>May also return an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error,\nor an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Json\" title=\"variant serenity::prelude::SerenityError::Json\"><code>Error::Json</code></a> if there is an error in deserializing the\nAPI response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.defer_ephemeral\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#320-326\">source</a><h4 class=\"code-header\">pub async fn <a href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html#tymethod.defer_ephemeral\" class=\"fn\">defer_ephemeral</a>(&amp;self, http: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"serenity/http/client/struct.Http.html\" title=\"struct serenity::http::client::Http\">Http</a>&gt;) -&gt; <a class=\"type\" href=\"serenity/type.Result.html\" title=\"type serenity::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Helper function to defer an interaction ephemerally</p>\n<h5 id=\"errors-9\"><a href=\"#errors-9\">Errors</a></h5>\n<p>May also return an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Http\" title=\"variant serenity::prelude::SerenityError::Http\"><code>Error::Http</code></a> if the API returns an error,\nor an <a href=\"serenity/prelude/enum.SerenityError.html#variant.Json\" title=\"variant serenity::prelude::SerenityError::Json\"><code>Error::Json</code></a> if there is an error in deserializing the\nAPI response.</p>\n</div></details></div></details>",0,"serenity::model::interactions::application_command::ApplicationCommandInteraction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ApplicationCommandInteraction\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#43\">source</a><a href=\"#impl-Clone-for-ApplicationCommandInteraction\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html\" title=\"struct serenity::model::prelude::prelude::interaction::application_command::ApplicationCommandInteraction\">ApplicationCommandInteraction</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#43\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html\" title=\"struct serenity::model::prelude::prelude::interaction::application_command::ApplicationCommandInteraction\">ApplicationCommandInteraction</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","serenity::model::interactions::application_command::ApplicationCommandInteraction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ApplicationCommandInteraction\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#43\">source</a><a href=\"#impl-Debug-for-ApplicationCommandInteraction\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html\" title=\"struct serenity::model::prelude::prelude::interaction::application_command::ApplicationCommandInteraction\">ApplicationCommandInteraction</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#43\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","serenity::model::interactions::application_command::ApplicationCommandInteraction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-ApplicationCommandInteraction\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#329-448\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-ApplicationCommandInteraction\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html\" title=\"struct serenity::model::prelude::prelude::interaction::application_command::ApplicationCommandInteraction\">ApplicationCommandInteraction</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#330-447\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">StdResult</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","serenity::model::interactions::application_command::ApplicationCommandInteraction"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-ApplicationCommandInteraction\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#43\">source</a><a href=\"#impl-Serialize-for-ApplicationCommandInteraction\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serenity/model/prelude/prelude/interaction/application_command/struct.ApplicationCommandInteraction.html\" title=\"struct serenity::model::prelude::prelude::interaction::application_command::ApplicationCommandInteraction\">ApplicationCommandInteraction</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/application/interaction/application_command.rs.html#43\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","serenity::model::interactions::application_command::ApplicationCommandInteraction"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()